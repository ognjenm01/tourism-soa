// <auto-generated />
using System;
using System.Collections.Generic;
using Explorer.Payments.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Explorer.Payments.Infrastructure.Migrations
{
    [DbContext(typeof(PaymentsContext))]
    [Migration("20240316173610_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("payments")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Explorer.Payments.Core.Domain.BundlePrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BundleId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("BundlePrices", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.Coupon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<int?>("TourId")
                        .HasColumnType("integer");

                    b.Property<int>("TouristId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Coupons", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<double>("Percentage")
                        .HasColumnType("double precision");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Discounts", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("TourDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TourId")
                        .HasColumnType("integer");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TourPrice")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OrderItems", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.PaymentRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("PaymentTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TourId")
                        .HasColumnType("integer");

                    b.Property<double>("TourPrice")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PaymentRecords", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.ShoppingCart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<List<int>>("OrdersId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.TourDiscount", b =>
                {
                    b.Property<long>("DiscountId")
                        .HasColumnType("bigint");

                    b.Property<int>("TourId")
                        .HasColumnType("integer");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("DiscountId", "TourId");

                    b.ToTable("TourDiscounts", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.TourPurchaseToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("TourId")
                        .HasColumnType("integer");

                    b.Property<int>("TouristId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TourPurchaseTokens", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.Wallet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("AdventureCoins")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Wallets", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.WishList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<List<int>>("WishListItemsId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("WishLists", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.WishListItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("TourDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TourDifficulty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TourDuration")
                        .HasColumnType("integer");

                    b.Property<int>("TourId")
                        .HasColumnType("integer");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TourPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("TourType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TravelDistance")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WishListItems", "payments");
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.TourDiscount", b =>
                {
                    b.HasOne("Explorer.Payments.Core.Domain.Discount", null)
                        .WithMany("TourDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Explorer.Payments.Core.Domain.Discount", b =>
                {
                    b.Navigation("TourDiscounts");
                });
#pragma warning restore 612, 618
        }
    }
}
