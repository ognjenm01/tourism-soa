// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/tour_service.proto

package tour

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{0}
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{1}
}

func (x *Id) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TourProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TouristPositionId int64                  `protobuf:"varint,2,opt,name=touristPositionId,proto3" json:"touristPositionId,omitempty"`
	TourId            int64                  `protobuf:"varint,3,opt,name=tourId,proto3" json:"tourId,omitempty"`
	Status            int64                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	StartTime         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	LastActivity      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=lastActivity,proto3" json:"lastActivity,omitempty"`
	CurrentKeypoint   int64                  `protobuf:"varint,7,opt,name=currentKeypoint,proto3" json:"currentKeypoint,omitempty"`
	IsInProgress      bool                   `protobuf:"varint,8,opt,name=isInProgress,proto3" json:"isInProgress,omitempty"`
}

func (x *TourProgress) Reset() {
	*x = TourProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourProgress) ProtoMessage() {}

func (x *TourProgress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourProgress.ProtoReflect.Descriptor instead.
func (*TourProgress) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{2}
}

func (x *TourProgress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourProgress) GetTouristPositionId() int64 {
	if x != nil {
		return x.TouristPositionId
	}
	return 0
}

func (x *TourProgress) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *TourProgress) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TourProgress) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TourProgress) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *TourProgress) GetCurrentKeypoint() int64 {
	if x != nil {
		return x.CurrentKeypoint
	}
	return 0
}

func (x *TourProgress) GetIsInProgress() bool {
	if x != nil {
		return x.IsInProgress
	}
	return false
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{3}
}

type TourProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourProgress *TourProgress `protobuf:"bytes,1,opt,name=tourProgress,proto3" json:"tourProgress,omitempty"`
}

func (x *TourProgressResponse) Reset() {
	*x = TourProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourProgressResponse) ProtoMessage() {}

func (x *TourProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourProgressResponse.ProtoReflect.Descriptor instead.
func (*TourProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{4}
}

func (x *TourProgressResponse) GetTourProgress() *TourProgress {
	if x != nil {
		return x.TourProgress
	}
	return nil
}

type MultiTourProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourProgress []*TourProgress `protobuf:"bytes,1,rep,name=tourProgress,proto3" json:"tourProgress,omitempty"`
}

func (x *MultiTourProgressResponse) Reset() {
	*x = MultiTourProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTourProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTourProgressResponse) ProtoMessage() {}

func (x *MultiTourProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTourProgressResponse.ProtoReflect.Descriptor instead.
func (*MultiTourProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{5}
}

func (x *MultiTourProgressResponse) GetTourProgress() []*TourProgress {
	if x != nil {
		return x.TourProgress
	}
	return nil
}

type TouristPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourProgress *TourProgress          `protobuf:"bytes,2,opt,name=tourProgress,proto3" json:"tourProgress,omitempty"`
	UserId       int64                  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Latitude     float32                `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float32                `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TouristPosition) Reset() {
	*x = TouristPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TouristPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TouristPosition) ProtoMessage() {}

func (x *TouristPosition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TouristPosition.ProtoReflect.Descriptor instead.
func (*TouristPosition) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{6}
}

func (x *TouristPosition) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TouristPosition) GetTourProgress() *TourProgress {
	if x != nil {
		return x.TourProgress
	}
	return nil
}

func (x *TouristPosition) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TouristPosition) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *TouristPosition) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *TouristPosition) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TouristPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *TouristPosition `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *TouristPositionResponse) Reset() {
	*x = TouristPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TouristPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TouristPositionResponse) ProtoMessage() {}

func (x *TouristPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TouristPositionResponse.ProtoReflect.Descriptor instead.
func (*TouristPositionResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{7}
}

func (x *TouristPositionResponse) GetPosition() *TouristPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

type Keypoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId      int64   `protobuf:"varint,2,opt,name=tourId,proto3" json:"tourId,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Latitude    float32 `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Position    uint64  `protobuf:"varint,7,opt,name=position,proto3" json:"position,omitempty"`
	Image       string  `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Secret      string  `protobuf:"bytes,9,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *Keypoint) Reset() {
	*x = Keypoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keypoint) ProtoMessage() {}

func (x *Keypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keypoint.ProtoReflect.Descriptor instead.
func (*Keypoint) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{8}
}

func (x *Keypoint) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Keypoint) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *Keypoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Keypoint) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Keypoint) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Keypoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Keypoint) GetPosition() uint64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Keypoint) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Keypoint) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type MultiKeypointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keypoint []*Keypoint `protobuf:"bytes,1,rep,name=keypoint,proto3" json:"keypoint,omitempty"`
}

func (x *MultiKeypointResponse) Reset() {
	*x = MultiKeypointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiKeypointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiKeypointResponse) ProtoMessage() {}

func (x *MultiKeypointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiKeypointResponse.ProtoReflect.Descriptor instead.
func (*MultiKeypointResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{9}
}

func (x *MultiKeypointResponse) GetKeypoint() []*Keypoint {
	if x != nil {
		return x.Keypoint
	}
	return nil
}

type TourTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tourid int64  `protobuf:"varint,2,opt,name=tourid,proto3" json:"tourid,omitempty"`
	Tag    string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TourTag) Reset() {
	*x = TourTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourTag) ProtoMessage() {}

func (x *TourTag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourTag.ProtoReflect.Descriptor instead.
func (*TourTag) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{10}
}

func (x *TourTag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourTag) GetTourid() int64 {
	if x != nil {
		return x.Tourid
	}
	return 0
}

func (x *TourTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type Tour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Userid           int64                  `protobuf:"varint,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price            float32                `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	Difficulty       int64                  `protobuf:"varint,6,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Transporttype    int64                  `protobuf:"varint,7,opt,name=transporttype,proto3" json:"transporttype,omitempty"`
	Status           int64                  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Tags             []*TourTag             `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Keypoints        []*Keypoint            `protobuf:"bytes,10,rep,name=keypoints,proto3" json:"keypoints,omitempty"`
	Duration         int64                  `protobuf:"varint,11,opt,name=duration,proto3" json:"duration,omitempty"`
	Distance         float32                `protobuf:"fixed32,12,opt,name=distance,proto3" json:"distance,omitempty"`
	Statusupdatetime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=statusupdatetime,proto3" json:"statusupdatetime,omitempty"`
	Tourprogress     []*TourProgress        `protobuf:"bytes,14,rep,name=tourprogress,proto3" json:"tourprogress,omitempty"`
}

func (x *Tour) Reset() {
	*x = Tour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tour) ProtoMessage() {}

func (x *Tour) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tour.ProtoReflect.Descriptor instead.
func (*Tour) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{11}
}

func (x *Tour) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tour) GetUserid() int64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Tour) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tour) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tour) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Tour) GetDifficulty() int64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *Tour) GetTransporttype() int64 {
	if x != nil {
		return x.Transporttype
	}
	return 0
}

func (x *Tour) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Tour) GetTags() []*TourTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Tour) GetKeypoints() []*Keypoint {
	if x != nil {
		return x.Keypoints
	}
	return nil
}

func (x *Tour) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Tour) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Tour) GetStatusupdatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.Statusupdatetime
	}
	return nil
}

func (x *Tour) GetTourprogress() []*TourProgress {
	if x != nil {
		return x.Tourprogress
	}
	return nil
}

type TourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tour *Tour `protobuf:"bytes,1,opt,name=tour,proto3" json:"tour,omitempty"`
}

func (x *TourResponse) Reset() {
	*x = TourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponse) ProtoMessage() {}

func (x *TourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponse.ProtoReflect.Descriptor instead.
func (*TourResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{12}
}

func (x *TourResponse) GetTour() *Tour {
	if x != nil {
		return x.Tour
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{13}
}

func (x *Status) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MultiTourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*Tour `protobuf:"bytes,1,rep,name=tours,proto3" json:"tours,omitempty"`
}

func (x *MultiTourResponse) Reset() {
	*x = MultiTourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tour_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiTourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiTourResponse) ProtoMessage() {}

func (x *MultiTourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tour_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiTourResponse.ProtoReflect.Descriptor instead.
func (*MultiTourResponse) Descriptor() ([]byte, []int) {
	return file_proto_tour_service_proto_rawDescGZIP(), []int{14}
}

func (x *MultiTourResponse) GetTours() []*Tour {
	if x != nil {
		return x.Tours
	}
	return nil
}

var File_proto_tour_service_proto protoreflect.FileDescriptor

var file_proto_tour_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x6f, 0x75, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xc4, 0x02, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f,
	0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x54, 0x6f, 0x75, 0x72,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x19, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0c, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe5, 0x01,
	0x0a, 0x0f, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x36, 0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x74, 0x6f, 0x75,
	0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4c, 0x0a, 0x17, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xec, 0x01, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x22, 0x43, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x07, 0x54, 0x6f, 0x75, 0x72, 0x54,
	0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xe1, 0x03, 0x0a,
	0x04, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6b,
	0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x46, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x2e, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x04, 0x74, 0x6f, 0x75, 0x72,
	0x22, 0x20, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x35, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x32, 0xd3, 0x02, 0x0a, 0x13, 0x54, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x13, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75, 0x72,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0b, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x08, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x08,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0xb2, 0x02, 0x0a, 0x16, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x08, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x1d, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x08, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x1d, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0xf7, 0x01, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x2e, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x08, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x2e, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x08, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd2,
	0x02, 0x0a, 0x0b, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x0a, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x08,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0c, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x1a, 0x17, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x08,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x17, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x12, 0x0a, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x1a, 0x13, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x17, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f,
	0x75, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tour_service_proto_rawDescOnce sync.Once
	file_proto_tour_service_proto_rawDescData = file_proto_tour_service_proto_rawDesc
)

func file_proto_tour_service_proto_rawDescGZIP() []byte {
	file_proto_tour_service_proto_rawDescOnce.Do(func() {
		file_proto_tour_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tour_service_proto_rawDescData)
	})
	return file_proto_tour_service_proto_rawDescData
}

var file_proto_tour_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_tour_service_proto_goTypes = []interface{}{
	(*Empty)(nil),                     // 0: tour.Empty
	(*Id)(nil),                        // 1: tour.Id
	(*TourProgress)(nil),              // 2: tour.TourProgress
	(*EmptyResponse)(nil),             // 3: tour.EmptyResponse
	(*TourProgressResponse)(nil),      // 4: tour.TourProgressResponse
	(*MultiTourProgressResponse)(nil), // 5: tour.MultiTourProgressResponse
	(*TouristPosition)(nil),           // 6: tour.TouristPosition
	(*TouristPositionResponse)(nil),   // 7: tour.TouristPositionResponse
	(*Keypoint)(nil),                  // 8: tour.Keypoint
	(*MultiKeypointResponse)(nil),     // 9: tour.MultiKeypointResponse
	(*TourTag)(nil),                   // 10: tour.TourTag
	(*Tour)(nil),                      // 11: tour.Tour
	(*TourResponse)(nil),              // 12: tour.TourResponse
	(*Status)(nil),                    // 13: tour.Status
	(*MultiTourResponse)(nil),         // 14: tour.MultiTourResponse
	(*timestamppb.Timestamp)(nil),     // 15: google.protobuf.Timestamp
}
var file_proto_tour_service_proto_depIdxs = []int32{
	15, // 0: tour.TourProgress.startTime:type_name -> google.protobuf.Timestamp
	15, // 1: tour.TourProgress.lastActivity:type_name -> google.protobuf.Timestamp
	2,  // 2: tour.TourProgressResponse.tourProgress:type_name -> tour.TourProgress
	2,  // 3: tour.MultiTourProgressResponse.tourProgress:type_name -> tour.TourProgress
	2,  // 4: tour.TouristPosition.tourProgress:type_name -> tour.TourProgress
	15, // 5: tour.TouristPosition.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 6: tour.TouristPositionResponse.position:type_name -> tour.TouristPosition
	8,  // 7: tour.MultiKeypointResponse.keypoint:type_name -> tour.Keypoint
	10, // 8: tour.Tour.tags:type_name -> tour.TourTag
	8,  // 9: tour.Tour.keypoints:type_name -> tour.Keypoint
	15, // 10: tour.Tour.statusupdatetime:type_name -> google.protobuf.Timestamp
	2,  // 11: tour.Tour.tourprogress:type_name -> tour.TourProgress
	11, // 12: tour.TourResponse.tour:type_name -> tour.Tour
	11, // 13: tour.MultiTourResponse.tours:type_name -> tour.Tour
	2,  // 14: tour.TourProgressService.CreateTourProgress:input_type -> tour.TourProgress
	0,  // 15: tour.TourProgressService.GetAllTourProgress:input_type -> tour.Empty
	1,  // 16: tour.TourProgressService.GetTourProgressById:input_type -> tour.Id
	2,  // 17: tour.TourProgressService.UpdateTourProgress:input_type -> tour.TourProgress
	1,  // 18: tour.TourProgressService.DeleteTourProgress:input_type -> tour.Id
	6,  // 19: tour.TouristPositionService.CreateTouristPosition:input_type -> tour.TouristPosition
	1,  // 20: tour.TouristPositionService.GetTouristPositionById:input_type -> tour.Id
	1,  // 21: tour.TouristPositionService.GetTouristPositionByUser:input_type -> tour.Id
	6,  // 22: tour.TouristPositionService.UpdateTouristPosition:input_type -> tour.TouristPosition
	8,  // 23: tour.KeypointService.CreateKeypoint:input_type -> tour.Keypoint
	1,  // 24: tour.KeypointService.GetKeypointsByTourId:input_type -> tour.Id
	8,  // 25: tour.KeypointService.UpdateKeypoint:input_type -> tour.Keypoint
	1,  // 26: tour.KeypointService.DeleteKeypoint:input_type -> tour.Id
	11, // 27: tour.TourService.CreateTour:input_type -> tour.Tour
	1,  // 28: tour.TourService.GetTourById:input_type -> tour.Id
	13, // 29: tour.TourService.GetTourByStatus:input_type -> tour.Status
	1,  // 30: tour.TourService.GetTourByAuthor:input_type -> tour.Id
	11, // 31: tour.TourService.UpdateTour:input_type -> tour.Tour
	3,  // 32: tour.TourService.GetAllTours:input_type -> tour.EmptyResponse
	3,  // 33: tour.TourProgressService.CreateTourProgress:output_type -> tour.EmptyResponse
	5,  // 34: tour.TourProgressService.GetAllTourProgress:output_type -> tour.MultiTourProgressResponse
	4,  // 35: tour.TourProgressService.GetTourProgressById:output_type -> tour.TourProgressResponse
	3,  // 36: tour.TourProgressService.UpdateTourProgress:output_type -> tour.EmptyResponse
	3,  // 37: tour.TourProgressService.DeleteTourProgress:output_type -> tour.EmptyResponse
	3,  // 38: tour.TouristPositionService.CreateTouristPosition:output_type -> tour.EmptyResponse
	7,  // 39: tour.TouristPositionService.GetTouristPositionById:output_type -> tour.TouristPositionResponse
	7,  // 40: tour.TouristPositionService.GetTouristPositionByUser:output_type -> tour.TouristPositionResponse
	3,  // 41: tour.TouristPositionService.UpdateTouristPosition:output_type -> tour.EmptyResponse
	3,  // 42: tour.KeypointService.CreateKeypoint:output_type -> tour.EmptyResponse
	9,  // 43: tour.KeypointService.GetKeypointsByTourId:output_type -> tour.MultiKeypointResponse
	3,  // 44: tour.KeypointService.UpdateKeypoint:output_type -> tour.EmptyResponse
	3,  // 45: tour.KeypointService.DeleteKeypoint:output_type -> tour.EmptyResponse
	3,  // 46: tour.TourService.CreateTour:output_type -> tour.EmptyResponse
	3,  // 47: tour.TourService.GetTourById:output_type -> tour.EmptyResponse
	14, // 48: tour.TourService.GetTourByStatus:output_type -> tour.MultiTourResponse
	14, // 49: tour.TourService.GetTourByAuthor:output_type -> tour.MultiTourResponse
	3,  // 50: tour.TourService.UpdateTour:output_type -> tour.EmptyResponse
	14, // 51: tour.TourService.GetAllTours:output_type -> tour.MultiTourResponse
	33, // [33:52] is the sub-list for method output_type
	14, // [14:33] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_tour_service_proto_init() }
func file_proto_tour_service_proto_init() {
	if File_proto_tour_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tour_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTourProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TouristPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TouristPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keypoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiKeypointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tour_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiTourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tour_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_proto_tour_service_proto_goTypes,
		DependencyIndexes: file_proto_tour_service_proto_depIdxs,
		MessageInfos:      file_proto_tour_service_proto_msgTypes,
	}.Build()
	File_proto_tour_service_proto = out.File
	file_proto_tour_service_proto_rawDesc = nil
	file_proto_tour_service_proto_goTypes = nil
	file_proto_tour_service_proto_depIdxs = nil
}
